plugins {
    id 'eclipse'
    id 'maven-publish'
    id 'org.cadixdev.licenser' version '0.6.1'
    id 'net.minecraftforge.gradleutils' version '2.+'
    id 'dev.gradleplugins.groovy-gradle-plugin' version '1.6.9'
}

defaultTasks 'updateLicenses', 'build'

ext.buildType = project.hasProperty("buildType") ? buildType : 'RELEASE'
ext.buildNumber = project.hasProperty("buildNumber") ? buildNumber : '0'
ext.ciSystem = project.hasProperty("ciSystem") ? ciSystem : 'unknown'
ext.commit = project.hasProperty("commit") ? commit : 'unknown'

group = 'org.spongepowered'
version = buildType == 'SNAPSHOT' ? "$buildVersion-SNAPSHOT" : gradleutils.tagOffsetVersion
archivesBaseName = 'mixingradle'
sourceCompatibility = targetCompatibility = '1.8'

if (JavaVersion.current() != JavaVersion.VERSION_1_8) {
    throw new GradleException("The use of the groovydoc task requires the Gradle JVM to be JRE 1.8; please change your Gradle JVM to 1.8")
}

repositories {
    mavenCentral()
    maven {
        url 'https://repo.gradle.org/gradle/libs-releases-local/'
    }
}

dependencies {
    implementation 'com.google.guava:guava:21.0'
    implementation 'org.ow2.asm:asm-tree:9.2'
}

processResources {
   from 'LICENSE.txt'
}

license {
    ext {
        name = project.name
        organization = project.organization
        url = project.url
    }
    include '**/*.groovy'
    header = file('HEADER.txt')
    ignoreFailures = false
}

jar {
    manifest.mainAttributes (
        "Built-By": System.properties['user.name'],
        "Created-By": System.properties['java.vm.version'] + " (" + System.properties['java.vm.vendor'] + ")",
        "Implementation-Title": project.name,
        "Implementation-Version": project.version + "+" + ciSystem + "-b" + buildNumber + ".git-" + commit,
    )
}

task groovydocJar(type: Jar, dependsOn: groovydoc) {
    from groovydoc.destinationDir
    archiveClassifier = 'groovydoc'
}

artifacts {
    archives jar
    archives groovydocJar
}

gradlePlugin {
    compatibility {
        minimumGradleVersion = '6.6'
    }
    website = 'http://www.gradle.org/'
    vcsUrl = 'https://github.com/SpongePowered/MixinGradle'
    plugins {
        patcher {
            id = 'org.spongepowered.mixin'
            implementationClass = 'org.spongepowered.asm.gradle.plugins.MixinGradlePlugin'
            displayName = 'SpongePowered Mixin Gradle Plugin'
            description = 'Gradle plugin for SpongePowered Mixin'
            tags.addAll('spongepowered', 'sponge', 'mixin')
        }
    }
    automatedPublishing = true
}

publishing {
    publications {
        pluginMaven(MavenPublication) {
            // Automated publishing declares the java component for us

            groupId = project.group
            version = project.version
            artifactId = project.archivesBaseName

            pom {
                name = project.archivesBaseName
                packaging = 'jar'
                description = 'MixinGradle'
                url = 'http://www.spongepowered.org/'

                scm {
                    url = 'https://github.com/SpongePowered/MixinGradle'
                    connection = 'scm:git:git://github.com/SpongePowered/MixinGradle.git'
                    developerConnection = 'scm:git:git@github.com:SpongePowered/MixinGradle.git'
                }

                issueManagement {
                    system = 'GitHub Issues'
                    url = 'https://github.com/SpongePowered/MixinGradle/issues'
                }

                licenses {
                    license {
                        name = 'MIT license'
                        url = 'http://opensource.org/licenses/MIT'
                        distribution = 'repo'
                    }
                }
            }
        }
    }
    repositories {
        if (buildType == 'RELEASE') {
            if (project.hasProperty("releaseRepo")) {
                maven {
                    credentials {
                        username = project.releaseRepoUsername
                        password = project.releaseRepoPassword
                    }
                    url project.releaseRepo
                }
            }
            if (project.hasProperty("spongeReleaseRepo")) {
                maven {
                    credentials {
                        username = project.spongeUsername
                        password = project.spongePassword
                    }
                    url project.spongeReleaseRepo
                }
            }
        } else if (project.hasProperty("spongeSnapshotRepo")) {
            maven {
                credentials {
                    username = project.spongeUsername
                    password = project.spongePassword
                }
                url project.spongeSnapshotRepo
            }
        }
    }
}
